worker_processes auto;

events {
    worker_connections 1024;
}

http {
    upstream auth {
        server auth:8000;
    }
    upstream user {
        server user:8000;
    }
    upstream chat {
        server chat:8000;
    }
    upstream game {
        server game:8000;
    }

    server {
        listen 80;
        # TODO: SSL 지원

        # 공통 CORS 설정
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        # 인증이 불필요한 엔드포인트 라우팅
        location /api/user/login/ {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With';
                add_header 'Access-Control-Allow-Credentials' 'true';
                return 204;
            }
            proxy_pass http://user;
            proxy_set_header Host api-gateway;
            proxy_set_header X-Real-IP $remote_addr;
        }
        location /api/user/register/email-check/ {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With';
                add_header 'Access-Control-Allow-Credentials' 'true';
                return 204;
            }
            proxy_pass http://user;
            proxy_set_header Host api-gateway;
            proxy_set_header X-Real-IP $remote_addr;
        }
        location /api/user/register/nickname-check/ {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With';
                add_header 'Access-Control-Allow-Credentials' 'true';
                return 204;
            }
            proxy_pass http://user;
            proxy_set_header Host api-gateway;
            proxy_set_header X-Real-IP $remote_addr;
        }
        location /api/user/register/complete/ {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With';
                add_header 'Access-Control-Allow-Credentials' 'true';
                return 204;
            }
            proxy_pass http://user;
            proxy_set_header Host api-gateway;
            proxy_set_header X-Real-IP $remote_addr;
        }
        location /api/user/2fa/ {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With';
                add_header 'Access-Control-Allow-Credentials' 'true';
                return 204;
            }
            proxy_pass http://user;
            proxy_set_header Host api-gateway;
            proxy_set_header X-Real-IP $remote_addr;
        }
        location /media/avatars/ {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With';
                add_header 'Access-Control-Allow-Credentials' 'true';
                return 204;
            }
            proxy_pass http://user;
            proxy_set_header Host api-gateway;
            proxy_set_header X-Real-IP $remote_addr;
        }
       
        # 인증이 필요한 모든 요청
        location / {
            # OPTIONS 요청 처리 (CORS Preflight)
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With';
                add_header 'Access-Control-Allow-Credentials' 'true';
                return 204;
            }

            # JWT 검증을 위해 auth로 요청 전달
            proxy_pass http://auth;
            proxy_set_header Host api-gateway;
            proxy_set_header X-Real-IP $remote_addr;

            # 검증 성공 시 적절한 서비스로 라우팅
            location /user/ {
                proxy_pass http://user;
            }
            location /chat/ {
                proxy_pass http://chat;
            }
            location /game/ {
                proxy_pass http://game;
            }
        }
    }
}