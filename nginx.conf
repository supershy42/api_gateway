worker_processes auto;

events {
    worker_connections 1024;
}

http {
    # OPTIONS 요청 처리
    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, X-Requested-With';
        add_header 'Access-Control-Allow-Credentials' 'true';
        return 204;
    }
    # 공통 CORS 설정
    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, X-Requested-With';
    add_header 'Access-Control-Allow-Credentials' 'true';

    upstream user {
        server user:8000;
    }
    upstream chat {
        server chat:8000;
    }
    upstream game {
        server game:8000;
    }

    # 1) HTTPS 서버 블록 (443)
    server {
        listen 443 ssl;

        # SSL 인증서
        ssl_certificate /etc/nginx/ssl/selfsigned.crt;
        ssl_certificate_key /etc/nginx/ssl/selfsigned.key;
        ssl_protocols TLSv1.2 TLSv1.3;

        #TODO: 공통 CSP 설정

        location / {
            location /media/avatars/default.png {
                alias /media/avatars/default.png;
                try_files $uri $uri/ = 404;
            }
            location /media/avatars/ {
                proxy_pass http://user;
                proxy_set_header Host api-gateway;
                proxy_set_header X-Real-IP $remote_addr;
            }
            location /api/user/ {
                proxy_pass http://user;
				proxy_set_header Host api-gateway;
            	proxy_set_header X-Real-IP $remote_addr;
            }
            location /api/chat/ {
                proxy_pass http://chat;
				proxy_set_header Host api-gateway;
            	proxy_set_header X-Real-IP $remote_addr;
            }
            location /api/game/ {
                proxy_pass http://game;
				proxy_set_header Host api-gateway;
            	proxy_set_header X-Real-IP $remote_addr;
            }
			location /ws/user/ {
                proxy_http_version 1.1;
				proxy_set_header Upgrade $http_upgrade;
				proxy_set_header Connection "upgrade";
				proxy_read_timeout 86400;

				# 쿼리스트링을 포함하여 전달
				proxy_pass http://user$request_uri;
				proxy_set_header Host api-gateway;
				proxy_set_header X-Real-IP $remote_addr;
            }
			location /ws/chat/ {
                proxy_http_version 1.1;
				proxy_set_header Upgrade $http_upgrade;
				proxy_set_header Connection "upgrade";
				proxy_read_timeout 86400;

				# 쿼리스트링을 포함하여 전달
				proxy_pass http://chat$request_uri;
				proxy_set_header Host api-gateway;
				proxy_set_header X-Real-IP $remote_addr;
            }
			location /ws/game/ {
                proxy_http_version 1.1;
				proxy_set_header Upgrade $http_upgrade;
				proxy_set_header Connection "upgrade";
				proxy_read_timeout 86400;

				# 쿼리스트링을 포함하여 전달
				proxy_pass http://game$request_uri;
				proxy_set_header Host api-gateway;
				proxy_set_header X-Real-IP $remote_addr;
            }
        }
    }

    # 2) HTTP -> HTTPS 리다이렉트
    server {
        listen 80;
        return 301 https://$host$request_uri;
    }
}